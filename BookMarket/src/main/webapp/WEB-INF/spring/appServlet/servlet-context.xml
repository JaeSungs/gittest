<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:webflow="http://www.springframework.org/schema/webflow-config"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/webflow-config http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.green.*" />
	<!-- com.green. 이름 으로 시작되는 모든 패키지를 참조 하도록 수정. -->
	
	<!-- 매트릭스 변수를 사용 할수 있도록 내용을 추가합니다. -->
	<annotation-driven enable-matrix-variables="true"/>
	
	<!-- 파일 업로드위한 multipartResolver 등록 -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <beans:property name="maxUploadSize" value="10240000" /><!-- 업로드파일 최대 크기 -->
    </beans:bean>
    
    <!-- interceptor 클래스 등록 -->
	<!-- interceptor 는 사용자가 URL을 요청하면 Controller에 요청이 되기 전에 가로채어 특정작업을 처리합니다.
	핸들러 인터셉터(Handler Interceptor) 라고도 합니다. -->
	<interceptors>  
        <beans:bean class= "com.green.interceptor.MonitoringInterceptor"/> 
    </interceptors>
    
    <!-- webflow 설정 추가 -->
	<webflow:flow-registry id="flowRegistry"	>
      <webflow:flow-location path="/WEB-INF/flows/order/order-flow.xml" id="order"/>
    </webflow:flow-registry>
   
    <webflow:flow-executor id="flowExecutor" flow-registry="flowRegistry" />

    <beans:bean id="flowHandlerMapping" class="org.springframework.webflow.mvc.servlet.FlowHandlerMapping">
      <beans:property name="flowRegistry" ref="flowRegistry" />
    </beans:bean>

 	<beans:bean id="flowHandlerAdapter" class="org.springframework.webflow.mvc.servlet.FlowHandlerAdapter">
      <beans:property name="flowExecutor" ref="flowExecutor" />
    </beans:bean>
    
    <!-- 데이터베이스 연결 위한 JDBC 드라이버 설정및 데이터베이스 접속url, 데이터베이스 접근 ID,password 설정하기 -->
    <beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
    	<!-- 데이터베이스 드라이버 설정 -->
    	<beans:property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>  
    	<!-- 데이터베이스 url 설정 -->
    	<beans:property name="url" value="jdbc:mysql://localhost:3306/springmvcDB?serverTimezone=UTC"/> 
    	<beans:property name="username" value="root"/> 
    	<beans:property name="password" value="1234"/>  
	</beans:bean>

	<beans:bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">  
    	<beans:property name="dataSource" ref="dataSource"/>
	</beans:bean>  
</beans:beans>
